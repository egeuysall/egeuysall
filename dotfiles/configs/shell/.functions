# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}

# Open man page as PDF in Preview
function manp() {
    man -t "$@" | open -f -a Preview;
}

# Extract most know archives
function extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create a data URL from a file
function dataurl() {
    local mimeType=$(file -b --mime-type "$1");
    if [[ $mimeType == text/* ]]; then
        mimeType="${mimeType};charset=utf-8";
    fi
    echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# Create a new git repo with one command
function gitinit() {
    git init && git add . && git commit -m "Initial commit"
}

# Compare original and gzipped file size
function gz() {
    local origsize=$(wc -c < "$1");
    local gzipsize=$(gzip -c "$1" | wc -c);
    local ratio=$(echo "$gzipsize * 100 / $origsize" | bc -l);
    printf "Original: %d bytes\n" "$origsize";
    printf "Gzipped: %d bytes (%2.2f%%)\n" "$gzipsize" "$ratio";
}

# Run npm script or list available scripts if no argument
function ns() {
    if [ -z "$1" ]; then
        cat package.json | jq '.scripts' | grep -v "[{}]" | sed 's/": "/: /' | sed 's/",$//' | sed 's/"//g' | sed 's/^  //'
    else
        npm run "$@"
    }
}

# Create a new web project with sensible defaults
function create-web-project() {
    local project_name=$1
    if [ -z "$project_name" ]; then
        echo "Please provide a project name."
        return 1
    fi
    
    mkdir -p "$project_name"
    cd "$project_name"
    
    # Initialize package.json
    npm init -y
    
    # Install common web dev dependencies
    pnpm add -D vite eslint prettier typescript
    
    # Create basic file structure
    mkdir -p src/assets src/components src/styles
    
    echo "Project $project_name created successfully!"
    echo "Run 'code .' to open in VS Code"
}

# Open browser with your localhost development server
function serve() {
    local port="${1:-8000}"
    open "http://localhost:${port}/"
    python3 -m http.server "$port"
}

# Start a new project with Vite
function vite-create() {
    pnpm create vite
}
